"ID","Название тест кейса","Предусловия","Шаги тест кейса","Ожидаемый результат","Тип"
"1","Регистрация нового пользователя","Пользователь не зарегистрирован; валидный email; доступ в интернет","1. Открыть страницу регистрации GitHub; 2. Заполнить поля username, email, password; 3. Нажать кнопку 'Sign up'; 4. Подтвердить email через письмо","Новый пользователь зарегистрирован, отображается приветственное сообщение","Положительный"
"2","Вход в систему с валидными данными","Пользователь зарегистрирован; известны корректные логин и пароль","1. Открыть страницу входа GitHub; 2. Ввести корректный username и password; 3. Нажать кнопку 'Sign in'","Пользователь успешно авторизован, перенаправление на домашнюю страницу","Положительный"
"3","Вход в систему с неверным паролем","Пользователь зарегистрирован","1. Открыть страницу входа; 2. Ввести корректный username и неверный password; 3. Нажать 'Sign in'","Отображается сообщение об ошибке: 'Неверный пароль'","Отрицательный"
"4","Восстановление пароля","Пользователь зарегистрирован; забыт пароль","1. Открыть страницу входа; 2. Нажать 'Forgot password'; 3. Ввести email; 4. Получить письмо с инструкциями; 5. Следовать инструкциям","Пользователь получает возможность восстановить доступ к аккаунту","Положительный"
"5","Создание нового репозитория","Пользователь авторизован; имеются права на создание репозитория","1. Нажать кнопку 'New repository'; 2. Ввести название и описание; 3. Выбрать публичный/приватный репозиторий; 4. Нажать 'Create repository'","Новый репозиторий создан и отображается на дашборде","Положительный"
"6","Создание репозитория с пустым названием","Пользователь авторизован","1. Нажать 'New repository'; 2. Оставить поле названия пустым; 3. Нажать 'Create repository'","Отображается ошибка 'Название не может быть пустым'","Отрицательный"
"7","Удаление репозитория","Пользователь является владельцем репозитория; репозиторий существует","1. Перейти в настройки репозитория; 2. Нажать 'Delete repository'; 3. Подтвердить удаление (возможно, ввести название репозитория)","Репозиторий удалён; при необходимости приходит подтверждение по email","Деструктивный"
"8","Создание новой ветки","Пользователь авторизован; репозиторий существует","1. Перейти в репозиторий; 2. Нажать на список веток (например, 'Branch: master'); 3. Ввести имя новой ветки; 4. Нажать 'Create branch'","Новая ветка создана и отображается в списке веток","Положительный"
"9","Слияние веток через Pull Request","В репозитории существуют минимум две ветки с изменениями","1. Перейти в раздел 'Pull Requests'; 2. Нажать 'New Pull Request'; 3. Выбрать ветку для слияния; 4. Нажать 'Create Pull Request'; 5. Проверить изменения; 6. Нажать 'Merge Pull Request'","Ветки успешно слиты, изменения применены в основной ветке","Положительный"
"10","Создание Issue","Пользователь авторизован; репозиторий существует","1. Перейти в репозиторий; 2. Нажать 'Issues'; 3. Нажать 'New Issue'; 4. Заполнить заголовок и описание; 5. Нажать 'Submit new issue'","Issue создан и отображается в списке Issues","Положительный"
"11","Закрытие Issue","Существует открытый Issue","1. Открыть Issue; 2. Нажать кнопку 'Close Issue'","Issue закрыт, статус изменён на 'Closed'","Положительный"
"12","Комментирование Issue","Существует Issue; пользователь авторизован","1. Открыть Issue; 2. Ввести текст комментария; 3. Нажать 'Comment'","Комментарий добавлен и отображается под Issue","Положительный"
"13","Fork репозитория","Пользователь авторизован; репозиторий публичный","1. Перейти в нужный репозиторий; 2. Нажать кнопку 'Fork'; 3. Выбрать аккаунт для форка","Репозиторий успешно скопирован в аккаунт пользователя","Положительный"
"14","Клонирование репозитория","Пользователь имеет установленный git-клиент; репозиторий публичный","1. Открыть страницу репозитория; 2. Скопировать URL для клонирования; 3. Выполнить команду git clone <URL>","Репозиторий успешно склонирован на локальную машину","Положительный"
"15","Публикация коммита","Пользователь имеет репозиторий; локально внесены изменения","1. Внести изменения в код; 2. Выполнить команду git add .; 3. Выполнить команду git commit -m 'Test commit'; 4. Выполнить git push origin <branch_name>","Изменения опубликованы в удалённом репозитории","Положительный"
"16","Добавление Collaborator","Пользователь является владельцем репозитория","1. Перейти в настройки репозитория; 2. Выбрать раздел 'Manage access'; 3. Нажать 'Invite a collaborator'; 4. Ввести имя пользователя; 5. Отправить приглашение","Приглашение отправлено, пользователь получает уведомление","Положительный"
"17","Создание Pull Request для изменений","Существует ветка с изменениями; пользователь авторизован","1. Перейти в репозиторий; 2. Нажать 'Compare & pull request'; 3. Заполнить описание; 4. Нажать 'Create pull request'","Pull Request создан и отображается в списке","Положительный"
"18","Просмотр кода репозитория","Пользователь авторизован; репозиторий содержит файлы","1. Перейти в репозиторий; 2. Выбрать нужный файл или папку","Содержимое файла или папки отображается корректно","Положительный"
"19","Запуск GitHub Actions workflow","Репозиторий содержит корректно настроенный workflow файл","1. Перейти в раздел 'Actions' репозитория; 2. Выбрать последний workflow; 3. Нажать 'Re-run jobs'","Workflow запускается, статус выполнения отображается","Положительный"
"20","Отправка Pull Request review","Существует открытый Pull Request; пользователь авторизован","1. Открыть Pull Request; 2. Нажать 'Review changes'; 3. Выбрать вариант (Approve/Request changes); 4. Добавить комментарий; 5. Нажать 'Submit review'","Review успешно отправлен и отображается в истории","Положительный"
"21","Просмотр уведомлений пользователя","Пользователь авторизован; есть новые уведомления","1. Нажать на иконку уведомлений; 2. Просмотреть список уведомлений","Отображается актуальный список уведомлений, новые выделены","Положительный"
"22","Настройка двухфакторной аутентификации (2FA)","Пользователь авторизован","1. Перейти в настройки аккаунта; 2. Выбрать раздел 'Security'; 3. Нажать 'Enable two-factor authentication'; 4. Следовать инструкциям","2FA успешно включена, выводится подтверждающее сообщение","Положительный"
"23","Поиск репозитория через поиск сайта","Пользователь авторизован","1. Ввести название репозитория в поисковую строку; 2. Нажать 'Search'","Отображаются результаты поиска, соответствующие введённому названию","Положительный"
"24","Подписка на репозиторий (Watch)","Пользователь авторизован; репозиторий существует","1. Перейти в репозиторий; 2. Нажать кнопку 'Watch'","Пользователь подписан на уведомления репозитория, статус меняется на 'Watching'","Положительный"
"25","Создание Gist","Пользователь авторизован","1. Перейти на страницу создания Gist; 2. Ввести заголовок и описание; 3. Добавить один или несколько файлов; 4. Нажать 'Create public gist'","Gist создан и отображается на странице пользователя","Положительный"
"26","Редактирование профиля пользователя","Пользователь авторизован","1. Перейти в настройки профиля; 2. Изменить данные (например, имя или bio); 3. Нажать 'Save'","Изменения сохранены, обновлённая информация отображается на странице профиля","Положительный"
"27","Загрузка файла через веб-интерфейс","Пользователь имеет права на запись в репозиторий","1. Перейти в репозиторий; 2. Нажать 'Upload files'; 3. Выбрать файл или перетащить его; 4. Нажать 'Commit changes'","Файл загружен в репозиторий и отображается в списке файлов","Положительный"
"28","Просмотр статистики репозитория","Пользователь авторизован; репозиторий содержит активность","1. Перейти в репозиторий; 2. Нажать 'Insights'; 3. Выбрать раздел 'Pulse' или 'Graphs'","Статистика репозитория отображается корректно","Положительный"
"29","Настройка вебхуков","Пользователь является администратором репозитория","1. Перейти в настройки репозитория; 2. Выбрать 'Webhooks'; 3. Нажать 'Add webhook'; 4. Ввести URL и выбрать событие; 5. Нажать 'Add webhook'","Вебхук настроен, тестовое событие проходит успешно","Положительный"
"30","Выход из системы","Пользователь авторизован","1. Нажать на иконку профиля; 2. Выбрать 'Sign out'","Пользователь выходит из системы, отображается страница входа","Положительный"
